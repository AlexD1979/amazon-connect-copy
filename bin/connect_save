#!/bin/bash

############################################################
#
# Get a list of components of an Amazon Connect instance
#

USAGE=$(cat <<EOD
Usage: connect_save [-?f] [-G ignore_prefix] instance_alias [aws_profile] [contact_flow_prefix]
    Retrieve resources from an Amazon Connect instance into plain files

    instance_alias       Alias of the Connect instance (or path to the directory to save, with the alias being the basename)
    profile              AWS Profile to use
    contact_flow_prefix  Prefix of Contact Flows and Modules of interest (all others will be ignored)
    -f                   Force removal of existing instance_alias directory
    -G ignore_prefix     Ignore queues, routing profiles or flows/modules with names prefixed by ignore_prefix
    -?                   Help
EOD
)
usage() { echo -e "$USAGE" >&2; exit 2; }

error() { echo "$1" >&2; exit 1; }

fix_module_json() {
    # A workaround for AWS CLI failed to create contact flow modules
    # with Transitions Errors and Conditions in the EndFlowModuleExecution block.
    module_json=$1
    ii=0
    cat "$module_json" > $TEMPFILE
    cat "$TEMPFILE" |
    jq -r ".Actions | map(.Type == \"EndFlowModuleExecution\") | .[]" |
    while read x; do
        if [ "$x" == "true" ]; then
            # Transitions Errors and Conditions found at Action[ii] - delete them
            cat "$module_json" > $TEMPFILE2
            jq "del(.Actions[$ii].Transitions.Errors, .Actions[$ii].Transitions.Conditions)" $TEMPFILE2 > "$module_json"
        fi
        ii=$[ii+1]
    done
}

TEMPFILE=$(mktemp)
TEMPFILE2=${TEMPFILE}_2
trap 'rm -r -- $TEMPFILE $TEMPFILE2' EXIT
touch $TEMPFILE $TEMPFILE2

forced=
jq_prefix_filter=
while getopts "?fG:" arg; do
  case "$arg" in
    f)  forced=on;;
    G)  jq_prefix_filter=" | select(.Name | test(\"^($OPTARG)\") | not)";;
    *)  usage;;
  esac
done
shift $((OPTIND-1))

instance_alias_dir=$1
instance_alias=$(basename "$instance_alias_dir")
profile=$2
profile_flag=${profile:+--profile $profile}

contact_flow_prefix=$3
contact_flow_prefix_filter=${contact_flow_prefix:+" | select(.Name | test(\"^($contact_flow_prefix).*\"))"}

if [ -z "$instance_alias_dir" ]; then
    usage
fi

if [ -d $instance_alias_dir ]; then
    if [ -n "$forced" ]; then
        echo "Existing Alias directory forcefully removed: $instance_alias_dir"
        rm -fr "$instance_alias_dir"
    else
        error "Alias directory already exists. Remove and try again (or use -f): $instance_alias_dir"
    fi
fi

cat <<EOD
Instance Alias: $instance_alias (in directory $instance_alias_dir)
AWS Profile: ${profile:-${AWS_PROFILE:-(default)}}
Contact Flow Prefix: $contact_flow_prefix
EOD


############################################################
#
# Instance
#

# First aws cli; only mkdir if successful.
aws connect list-instances $profile_flag > $TEMPFILE
test $? -eq 0 || error
mkdir -p $instance_alias_dir

instance_id=$(cat $TEMPFILE |
jq -r ".InstanceSummaryList[] | select(.InstanceAlias == \"$instance_alias\")" |
tee $instance_alias_dir/instance.json |
jq -r ".Id")
echo "Instance ID: $instance_id"

test -n "$instance_id" || error "Instance $instance_alias does not exist"

cat $instance_alias_dir/instance.json |
grep : |
sed -e's/ *"/instance_/' -e's/": /=/' -e's/,$//' > $instance_alias_dir/instance.var
echo "aws_Profile=\"$profile\"" >> $instance_alias_dir/instance.var
echo "instance_contact_flow_prefix=\"$contact_flow_prefix\"" >> $instance_alias_dir/instance.var


############################################################
#
# Prompts
#

aws connect list-prompts \
    --instance-id $instance_id \
    $profile_flag > $TEMPFILE
test $? -eq 0 || error
cat $TEMPFILE |
jq -r ".PromptSummaryList |= sort_by(.Name) | .[][]" |
tee $instance_alias_dir/prompts.json |
echo -e "\n$(jq -s "length") prompts listed in $instance_alias_dir/prompts.json"


############################################################
#
# Hours of operations
#

aws connect list-hours-of-operations \
    --instance-id $instance_id \
    $profile_flag > $TEMPFILE
test $? -eq 0 || error
cat $TEMPFILE |
jq -r ".HoursOfOperationSummaryList |= sort_by(.Name) | .[][]" |
tee $instance_alias_dir/hours.json |
echo -e "\n$(jq -s "length") hours of operations listed in $instance_alias_dir/hours.json"

jq -r ".Id + \" \" + .Name" $instance_alias_dir/hours.json |
while read hour_id hour_name; do
    echo "Exporting hours of operation $hour_name"
    aws connect describe-hours-of-operation \
        --instance-id $instance_id \
        --hours-of-operation-id $hour_id \
        $profile_flag > "$instance_alias_dir/hour_$hour_name.json"
    test $? -eq 0 || error
done
test $? -eq 0 || error


############################################################
#
# Queues
#

aws connect list-queues \
    --instance-id $instance_id \
    $profile_flag > $TEMPFILE
test $? -eq 0 || error
cat $TEMPFILE |
jq -r ".QueueSummaryList[] | select(.QueueType != \"AGENT\")$jq_prefix_filter" |
jq -s "sort_by(.Name) | .[]" |
tee $instance_alias_dir/queues.json |
echo -e "\n$(jq -s "length") queues listed in $instance_alias_dir/queues.json"

jq -r ".Id + \" \" + .Name" $instance_alias_dir/queues.json |
while read queue_id queue_name; do
    echo "Exporting queue $queue_name"
    aws connect describe-queue \
        --instance-id $instance_id \
        --queue-id $queue_id \
        $profile_flag > "$instance_alias_dir/queue_$queue_name.json"
    test $? -eq 0 || error
done
test $? -eq 0 || error


############################################################
#
# Routing Profiles
#

aws connect list-routing-profiles \
    --instance-id $instance_id \
    $profile_flag > $TEMPFILE
test $? -eq 0 || error
cat $TEMPFILE |
jq -r ".RoutingProfileSummaryList[]$jq_prefix_filter" |
jq -s "sort_by(.Name) | .[]" |
tee $instance_alias_dir/routings.json |
echo -e "\n$(jq -s "length") routing profiles listed in $instance_alias_dir/routings.json"

jq -r ".Id + \" \" + .Name" $instance_alias_dir/routings.json |
while read routing_id routing_name; do
    echo "Exporting routing profile $routing_name"
    aws connect describe-routing-profile \
        --instance-id $instance_id \
        --routing-profile-id $routing_id \
        $profile_flag > "$instance_alias_dir/routing_$routing_name.json"
    test $? -eq 0 || error
    aws connect list-routing-profile-queues \
        --instance-id $instance_id \
        --routing-profile-id $routing_id \
        $profile_flag > "$instance_alias_dir/routingQs_$routing_name.json"
    test $? -eq 0 || error
done
test $? -eq 0 || error


############################################################
#
# Contact Flow Modules
#

aws connect list-contact-flow-modules \
    --instance-id $instance_id \
    $profile_flag > $TEMPFILE
test $? -eq 0 || error
cat $TEMPFILE |
jq -r ".ContactFlowModulesSummaryList[]${contact_flow_prefix_filter}${jq_prefix_filter}" |
jq -s "sort_by(.Name) | .[]" |
tee $instance_alias_dir/modules.json |
echo -e "\n$(jq -s "length") contact flow modules listed in $instance_alias_dir/modules.json"


############################################################
#
# Export Contact Flow Modules
#

jq -r ".Id + \" \" + .Name" $instance_alias_dir/modules.json |
while read module_id module_name; do
    echo "Exporting contact flow module $module_name"
    aws connect describe-contact-flow-module \
        --instance-id $instance_id \
        --contact-flow-module-id $module_id $profile_flag > $TEMPFILE
    test $? -eq 0 || error
    cat $TEMPFILE |
    jq -r '.ContactFlowModule.Content' > "$instance_alias_dir/module_$module_name.json"
    fix_module_json "$instance_alias_dir/module_$module_name.json"
done
test $? -eq 0 || error


############################################################
#
# Contact Flows
#

aws connect list-contact-flows \
    --instance-id $instance_id \
    $profile_flag > $TEMPFILE
test $? -eq 0 || error
cat $TEMPFILE |
jq -r ".ContactFlowSummaryList[]${contact_flow_prefix_filter}${jq_prefix_filter}" |
jq -s "sort_by(.Name) | .[]" |
tee $instance_alias_dir/flows.json |
echo -e "\n$(jq -s "length") contact flows listed in $instance_alias_dir/flows.json"


############################################################
#
# Export Contact Flows
#

jq -r ".Id + \" \" + .Name" $instance_alias_dir/flows.json |
while read flow_id flow_name; do
    echo "Exporting contact flow $flow_name"
    aws connect describe-contact-flow \
        --instance-id $instance_id \
        --contact-flow-id $flow_id $profile_flag > $TEMPFILE
    test $? -eq 0 || error
    cat $TEMPFILE |
    jq -r '.ContactFlow.Content' > "$instance_alias_dir/flow_$flow_name.json"
done
test $? -eq 0 || error

echo
echo All done
